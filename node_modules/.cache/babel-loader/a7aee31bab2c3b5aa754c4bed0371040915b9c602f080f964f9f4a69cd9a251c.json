{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\g64399\\\\source\\\\repos\\\\react1\\\\src\\\\Components\\\\Body.js\",\n  _s = $RefreshSig$();\nimport { react, useState } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Table from 'react-bootstrap/Table';\nimport { CopyBlock, dracula, solarizedDark } from 'react-code-blocks';\nimport '../styles/Body.css';\nimport TaskList from \"./TaskList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Body = () => {\n  _s();\n  let someTasks = [{\n    id: 0,\n    Description: \"Unhandled Exceptions\",\n    TimeFrame: \"16 Jan\"\n  }, {\n    id: 1,\n    Description: \"Qual Renderer\",\n    TimeFrame: \"21 Nov\"\n  }, {\n    id: 2,\n    Description: \"Class Work\",\n    TimeFrame: \"20 Jan\"\n  }];\n  const [tasks, setTasks] = useState(someTasks);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          className: \"titleCol\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"bodyTitle, Gold\",\n            children: \"Purpose of React\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"Gold\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"BiggerText\",\n          children: \"Build highly dynamic web applications in a efficient and reusable way using javascript. \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"BiggerText\",\n          children: \"Makes the difficulty of creating dynamic user interfaces simplified by introducing statefull front end pages while allowing for organized structure with components.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"sectionSpace\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          className: \"titleCol\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"bodyTitle, Gold\",\n            children: \"Fundamentals Driving The Purpose of React\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"Gold\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 4,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"BiggerText\",\n            children: [\" 1. \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"SubHeading\",\n              children: \"Components:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 55\n            }, this), \" Using components makes building UIs analogous to building with legos.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 43\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 49\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"BiggerText\",\n            children: \" 2. UI is entirely written in javascript which aids in efficient UI updating when state is changed.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 43\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"BiggerText\",\n            children: [\" 3. \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"SubHeading\",\n              children: \"Reconciliation:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 55\n            }, this), \" Efficiency is maintained by updating only what is absolutely necessary. When UI state changes only the changes are persisted to the DOM while everything else is left as is. (Partial DOM updating).\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"CenterH\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: require(\"../Images/Components.jpg\"),\n            alt: \"Syntax Showing Component Structure\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: require(\"../Images/reconSmall.jpg\"),\n            alt: \"One of three html nodes being updated\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"sectionSpace\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          className: \"titleCol\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"bodyTitle, Gold\",\n            children: \"Components\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"Gold\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"BiggerText\",\n          children: [\"Essentially a javascript function, Components define specific but reusable functionality that are \", \"\\\"stacked\\\"\", \" in the root component to build up the application interface. Examples may include components for a header, footer, side panel, images, sections of the body, etc...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"BiggerText\",\n          children: \"The root component invokes and renders all other components. Typicall the \\\"App\\\" / \\\"Index\\\" component.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"DisplayInline\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"BiggerText\",\n            children: \"General Syntax: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginLeft: \"50px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(CopyBlock, {\n              language: \"jsx\",\n              text: \"const ComponentName = (props) => { <div><h3>Hello World!</h3></div> }\",\n              theme: solarizedDark,\n              codeBlock: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"BiggerText\",\n            style: {\n              marginTop: \"20px\"\n            },\n            children: \"JSX (Javascript Extension): Syntactically similar to HTML, JSX is a syntax extension of javascript that is interpreted into react code which is then, by the react DOM, converted to html understood by the browser.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"BiggerText\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            href: \"https://babeljs.io/repl#?browsers=defaults%2C%20not%20ie%2011%2C%20not%20ie_mob%2011&build=&builtIns=false&corejs=3.21&spec=false&loose=false&code_lz=Q&debug=false&forceAllTransforms=false&shippedProposals=false&circleciRepo=&evaluate=false&fileSize=false&timeTravel=false&sourceType=module&lineWrap=true&presets=env%2Creact%2Cstage-2&prettier=false&targets=&version=7.20.12&externalPlugins=&assumptions=%7B%7D\",\n            children: \"Babel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"sectionSpace\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          className: \"titleCol\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"Gold\",\n            children: \"Properties, Hooks, and Collections\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"Gold\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"SubHeading\",\n            style: {\n              marginLeft: \"50px\"\n            },\n            children: \"Component Properties\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              marginLeft: \"50px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"BiggerText\",\n              children: \"Components can accept properties in many forms, but a popular method when getting started is by setting component attributes (similier to setting html attributes) that represent the properties to pass. Properties can be objects, arrays, or functions.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(CopyBlock, {\n            language: \"jsx\",\n            text: \"const App = () => { \\r\\n return ( \\r\\n <div> \\r\\n <Heading title=\\\"React Overview\\\" version=\\\"React 18\\\" /> \\r\\n <Welcome name=\\\"Lucian\\\"/> \\r\\n</div>)}; \",\n            theme: solarizedDark,\n            codeBlock: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(CopyBlock, {\n            language: \"jsx\",\n            text: \"const Welcome = (props) => {\\r\\n return (\\r\\n <h3>Welcome Back {props.name}!</h3>\\r\\n) }\",\n            theme: solarizedDark,\n            codeBlock: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CopyBlock, {\n            language: \"text\",\n            showLineNumbers: false,\n            text: \"Output: Welcome Back Lucian!\",\n            theme: solarizedDark,\n            codeBlock: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"sectionSpace\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"SubHeading\",\n            style: {\n              marginLeft: \"50px\"\n            },\n            children: \"Rendering Collections\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              marginLeft: \"50px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"BiggerText\",\n              children: [\"Javascript offers a \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"SubHeading\",\n                children: \".map()\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 76\n              }, this), \" function that when combined with React works great to render collections dynamically in the UI.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(CopyBlock, {\n            language: \"jsx\",\n            text: \"~Sample Collection:~\\r\\nlet someTasks = [\\r\\n{\\r\\nid: 0, \\r\\nDescription: \\\"Unhandled Exceptions\\\",\\r\\nTimeFrame: \\\"16 Jan\\\",\\r\\n}, \\r\\n{\\r\\nid: 1, \\r\\nDescription: \\\"Qual Renderer\\\",\\r\\nTimeFrame: \\\"21 Nov\\\",\\r\\n}, \\r\\n{\\r\\nid: 2, \\r\\nDescription: \\\"Class Work\\\",\\r\\nTimeFrame: \\\"20 Jan\\\",\\r\\n} \\r\\n]; \\r\\n\\r\\nconst [tasks, setTasks] = useState(someTasks);\\r\\n\",\n            theme: solarizedDark,\n            codeBlock: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(CopyBlock, {\n            language: \"jsx\",\n            text: \"~Using Map():~\\r\\n<Table className=\\\"SampleTable\\\"> \\r\\n <thead>\\r\\n<tr>\\r\\n<th>Task ID</th>\\r\\n<th>Description</th>\\r\\n<th>Time Due</th>\\r\\n</tr>\\r\\n</thead>\\r\\n{tasks.map((t) => (<TaskList key={t.id} {...t} />))}\\r\\n</Table>\\r\\n\",\n            theme: solarizedDark,\n            codeBlock: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(CopyBlock, {\n            language: \"jsx\",\n            text: \"~Mapped Task:~\\r\\nimport react from \\\"react\\\";\\r\\n\\r\\nconst TaskList = ({id, Description, TimeFrame}) => {\\r\\nreturn (\\r\\n body>\\r\\n<tr>\\r\\n<td>{id}</td>\\r\\n<td>{Description}</td>\\r\\n<td>{TimeFrame}</td>\\r\\n</tr>\\r\\n</tbody>\\r\\n); \\r\\n}; \\r\\n\\r\\nexport default TaskList; \\r\\n\",\n            theme: solarizedDark,\n            codeBlock: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          className: \"SampleTable\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Task ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Time Due\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this), tasks.map(t => /*#__PURE__*/_jsxDEV(TaskList, {\n            ...t\n          }, t.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 44\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"sectionSpace\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"SubHeading\",\n            style: {\n              marginLeft: \"50px\"\n            },\n            children: \"Hooks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              marginLeft: \"50px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"BiggerText\",\n              children: \"Hooks are the encapsulation of complex React functions. The most commonly used hooks allow for page state to exist and simplifies the use of asynchronous processes like invoking an API while completing the rendering of the UI.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"Gold\",\n            style: {\n              marginLeft: \"90px\"\n            },\n            children: \"Maintaining Page State\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"BiggerText\",\n              style: {\n                marginLeft: \"115px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontStyle: \"italic\",\n                  color: \"#6495ED\"\n                },\n                children: \"useState\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 29\n              }, this), \" is a function that defines a variable and its corresponding set function. The variable holds the current state of a component field (i.e: the textbox, checkbox, page title value etc..) and the set function defines how to change the variable state at any point in the program execution or on a user invoked event.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"BiggerText\",\n              style: {\n                marginLeft: \"115px\"\n              },\n              children: \"useState is used by react in conjunction with reacts Reconciliation. Since we maintain state in memory we can track what UI elements have changed and which have remained untouched\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginLeft: \"115px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(CopyBlock, {\n              language: \"jsx\",\n              text: \"//Creating Page State Variable\\r\\nconst[variable, setVariable] = useState(initialState);\\r\\n\\r\\n//changing state of variable\\r\\nsetVariable(NewState);\",\n              theme: solarizedDark,\n              showLineNumbers: false,\n              codeBlock: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"sectionSpace\",\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"BiggerText\",\n              style: {\n                marginLeft: \"115px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontStyle: \"italic\",\n                  color: \"#6495ED\"\n                },\n                children: \"useEffect\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginLeft: \"115px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(CopyBlock, {\n              language: \"jsx\",\n              text: \"New Example Here\",\n              theme: solarizedDark,\n              showLineNumbers: false,\n              codeBlock: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"sectionSpace\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          className: \"titleCol\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"Gold\",\n            children: \"Reconciliation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"Gold\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"BiggerText\",\n          children: [\"React maintains a \", \"\\\"React DOM\\\"\", \" (RD) which is essentially an in memory DOM. When there are changes to the Browser DOM (BD). React will take the RD and compare it to the BD and mark any changes that are in the VD but not in the BD. On save React will only take those flagged changes and persist them to the BD leaving any unchanged elements untouched and change elements that were flagged.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"sectionSpace\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          className: \"titleCol\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"Gold\",\n            children: \"Application Structure\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"Gold\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"BiggerText\",\n          children: \"Maintains a clean and organized application structure that resembles that of our current design behavior with folder separated sections within a hierarchical structure.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"CenterH\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: require(\"../Images/Structure.jpg\"),\n            alt: \"Folder Structure of Application\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(Body, \"hFm2Svfku4L74nQA+P88awUiTNM=\");\n_c = Body;\nexport default Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["react","useState","Container","Col","Row","Table","CopyBlock","dracula","solarizedDark","TaskList","Body","someTasks","id","Description","TimeFrame","tasks","setTasks","require","marginLeft","marginTop","map","t","fontStyle","color"],"sources":["C:/Users/g64399/source/repos/react1/src/Components/Body.js"],"sourcesContent":["import { react, useState } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Table from 'react-bootstrap/Table';\r\nimport { CopyBlock, dracula, solarizedDark } from 'react-code-blocks';\r\nimport '../styles/Body.css';\r\nimport TaskList from \"./TaskList\";\r\n\r\n\r\nconst Body = () => {\r\n    let someTasks = [\r\n    {\r\n        id: 0,\r\n            Description: \"Unhandled Exceptions\",\r\n                TimeFrame: \"16 Jan\",\r\n        },\r\n    {\r\n        id: 1,\r\n            Description: \"Qual Renderer\",\r\n                TimeFrame: \"21 Nov\",\r\n        },\r\n    {\r\n        id: 2,\r\n            Description: \"Class Work\",\r\n                TimeFrame: \"20 Jan\",\r\n        }\r\n    ];\r\n\r\n    const [tasks, setTasks] = useState(someTasks);\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <br />\r\n                <Row>\r\n                    <Col className='titleCol'>\r\n                        <h3 className='bodyTitle, Gold'>Purpose of React</h3>\r\n                    </Col>\r\n                    <hr className=\"Gold\" />\r\n                    <li className=\"BiggerText\">Build highly dynamic web applications in a efficient and reusable way using javascript. </li>\r\n                    <li className=\"BiggerText\">Makes the difficulty of creating dynamic user interfaces simplified by introducing statefull front end pages\r\n                        while allowing for organized structure with components.</li>\r\n                </Row>\r\n\r\n\r\n                <Row className=\"sectionSpace\">\r\n                    <Col className=\"titleCol\">\r\n                        <h3 className=\"bodyTitle, Gold\">Fundamentals Driving The Purpose of React</h3>\r\n                    </Col>\r\n                    <hr className=\"Gold\" />\r\n                    <Col xs={4}>\r\n                        <p className=\"BiggerText\"> 1. <span className=\"SubHeading\">Components:</span> Using components makes building UIs analogous to building with legos.</p>\r\n                        <br /><br /><br /><br /><br />\r\n                        <p className=\"BiggerText\"> 2. UI is entirely written in javascript which aids in efficient UI updating when state is changed.</p>\r\n                        <br /><br /><br /><br />\r\n\r\n                        <p className=\"BiggerText\"> 3. <span className=\"SubHeading\">Reconciliation:</span> Efficiency is maintained by updating only what is absolutely necessary. When UI\r\n                            state changes only the changes are persisted to the DOM while everything else is left as is. (Partial DOM updating).</p>\r\n                    </Col>\r\n                    <Col className=\"CenterH\">\r\n                        <img src={require(\"../Images/Components.jpg\")} alt=\"Syntax Showing Component Structure\"></img>\r\n                        <hr />\r\n                        <img src={require(\"../Images/reconSmall.jpg\")} alt=\"One of three html nodes being updated\"></img>\r\n                    </Col>\r\n                </Row>\r\n\r\n\r\n                <Row className=\"sectionSpace\">\r\n                    <Col className=\"titleCol\"><h3 className=\"bodyTitle, Gold\">Components</h3></Col>\r\n                    <hr className=\"Gold\" />\r\n                    <p className=\"BiggerText\">\r\n                        Essentially a javascript function, Components define specific but reusable functionality that are {\"\\\"stacked\\\"\"} in the root component to build up the\r\n                        application interface. Examples may include components for a header, footer, side panel, images, sections of the body, etc...\r\n                    </p>\r\n                    <p className=\"BiggerText\">\r\n                        The root component invokes and renders all other components. Typicall the \"App\" / \"Index\" component.\r\n                    </p>\r\n                    <Col className=\"DisplayInline\">\r\n                        <label className=\"BiggerText\">General Syntax: </label>\r\n                        <div style={{ marginLeft: \"50px\" }}>\r\n                            <CopyBlock\r\n                                language={\"jsx\"}\r\n                                text={\"const ComponentName = (props) => { <div><h3>Hello World!</h3></div> }\"}\r\n                                theme={solarizedDark}\r\n                                codeBlock\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                    <Row>\r\n                        <p className=\"BiggerText\" style={{ marginTop: \"20px\" }}>\r\n                            JSX (Javascript Extension): Syntactically similar to HTML, JSX is a syntax extension of javascript that is interpreted into react\r\n                            code which is then, by the react DOM, converted to html understood by the browser.\r\n                        </p>\r\n                    </Row>\r\n                    <div className=\"BiggerText\"><a target=\"_blank\" rel=\"noreferrer\" href=\"https://babeljs.io/repl#?browsers=defaults%2C%20not%20ie%2011%2C%20not%20ie_mob%2011&build=&builtIns=false&corejs=3.21&spec=false&loose=false&code_lz=Q&debug=false&forceAllTransforms=false&shippedProposals=false&circleciRepo=&evaluate=false&fileSize=false&timeTravel=false&sourceType=module&lineWrap=true&presets=env%2Creact%2Cstage-2&prettier=false&targets=&version=7.20.12&externalPlugins=&assumptions=%7B%7D\">Babel</a></div>\r\n                </Row>\r\n\r\n                <Row className=\"sectionSpace\">\r\n                    <Col className=\"titleCol\">\r\n                        <h3 className=\"Gold\">Properties, Hooks, and Collections</h3>\r\n                    </Col>\r\n                    <hr className=\"Gold\" />\r\n                    <ul>\r\n                        <h4 className=\"SubHeading\" style={{ marginLeft: \"50px\" }}>Component Properties</h4>\r\n                        <ul style={{ marginLeft: \"50px\" }}>\r\n                            <li className=\"BiggerText\">Components can accept properties in many forms, but a popular method when getting started is by setting component attributes\r\n                                (similier to setting html attributes) that represent the properties to pass. Properties can be objects, arrays, or functions.</li>\r\n                        </ul>\r\n                    </ul>\r\n\r\n                    <Col>\r\n                        <CopyBlock\r\n                            language=\"jsx\"\r\n                            text={\"const App = () => { \\r\\n return ( \\r\\n <div> \\r\\n <Heading title=\\\"React Overview\\\" version=\\\"React 18\\\" /> \\r\\n <Welcome name=\\\"Lucian\\\"/> \\r\\n</div>)}; \"}\r\n                            theme={solarizedDark}\r\n                            codeBlock\r\n                        />\r\n                    </Col>\r\n                    <Col>\r\n                        <CopyBlock\r\n                            language=\"jsx\"\r\n                            text={\"const Welcome = (props) => {\\r\\n return (\\r\\n <h3>Welcome Back {props.name}!</h3>\\r\\n) }\"}\r\n                            theme={solarizedDark}\r\n                            codeBlock\r\n                        />\r\n                        <CopyBlock\r\n                            language=\"text\"\r\n                            showLineNumbers={false}\r\n                            text={\"Output: Welcome Back Lucian!\"}\r\n                            theme={solarizedDark}\r\n                            codeBlock\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row className=\"sectionSpace\">\r\n                    <Col>\r\n                        <h4 className=\"SubHeading\" style={{ marginLeft: \"50px\" }}>Rendering Collections</h4>\r\n                        <ul style={{ marginLeft: \"50px\" }}>\r\n                            <li className=\"BiggerText\">Javascript offers a <span className=\"SubHeading\">.map()</span> function that when combined with React works great to render collections dynamically in the UI.</li>\r\n                        </ul>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <CopyBlock\r\n                            language=\"jsx\"\r\n                            text={\"~Sample Collection:~\\r\\nlet someTasks = [\\r\\n{\\r\\nid: 0, \\r\\nDescription: \\\"Unhandled Exceptions\\\",\\r\\nTimeFrame: \\\"16 Jan\\\",\\r\\n}, \\r\\n{\\r\\nid: 1, \\r\\nDescription: \\\"Qual Renderer\\\",\\r\\nTimeFrame: \\\"21 Nov\\\",\\r\\n}, \\r\\n{\\r\\nid: 2, \\r\\nDescription: \\\"Class Work\\\",\\r\\nTimeFrame: \\\"20 Jan\\\",\\r\\n} \\r\\n]; \\r\\n\\r\\nconst [tasks, setTasks] = useState(someTasks);\\r\\n\" }\r\n                            theme={solarizedDark}\r\n                            codeBlock\r\n                        />\r\n                    </Col>\r\n                    <Col>\r\n                        <CopyBlock\r\n                            language=\"jsx\"\r\n                            text={\"~Using Map():~\\r\\n<Table className=\\\"SampleTable\\\"> \\r\\n <thead>\\r\\n<tr>\\r\\n<th>Task ID</th>\\r\\n<th>Description</th>\\r\\n<th>Time Due</th>\\r\\n</tr>\\r\\n</thead>\\r\\n{tasks.map((t) => (<TaskList key={t.id} {...t} />))}\\r\\n</Table>\\r\\n\"}\r\n                            theme={solarizedDark}\r\n                            codeBlock\r\n                        />\r\n                    </Col>\r\n                    <Col>\r\n                        <CopyBlock\r\n                            language=\"jsx\"\r\n                            text={\"~Mapped Task:~\\r\\nimport react from \\\"react\\\";\\r\\n\\r\\nconst TaskList = ({id, Description, TimeFrame}) => {\\r\\nreturn (\\r\\n body>\\r\\n<tr>\\r\\n<td>{id}</td>\\r\\n<td>{Description}</td>\\r\\n<td>{TimeFrame}</td>\\r\\n</tr>\\r\\n</tbody>\\r\\n); \\r\\n}; \\r\\n\\r\\nexport default TaskList; \\r\\n\"}\r\n                            theme={solarizedDark}\r\n                            codeBlock\r\n                        />\r\n                    </Col>\r\n                    <Table className=\"SampleTable\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Task ID</th>\r\n                                <th>Description</th>\r\n                                <th>Time Due</th>\r\n                            </tr>\r\n                        </thead>\r\n                        {tasks.map((t) => (<TaskList key={t.id} {...t} />))}\r\n                    </Table>\r\n                </Row>\r\n\r\n                <Row className=\"sectionSpace\">\r\n                    <Col>\r\n                        <h4 className=\"SubHeading\" style={{ marginLeft: \"50px\" }}>Hooks</h4>\r\n                        <ul style={{ marginLeft: \"50px\" }}>\r\n                            <li className=\"BiggerText\">Hooks are the encapsulation of complex React functions. The most commonly used hooks allow for page state to exist and simplifies\r\n                                                       the use of asynchronous processes like invoking an API while completing the rendering of the UI.</li>\r\n                        </ul>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                    <h3 className=\"Gold\" style={{ marginLeft: \"90px\" }}>Maintaining Page State</h3>\r\n                        <ul>\r\n                            <li className=\"BiggerText\" style={{marginLeft:\"115px\"} }>\r\n                            <span style={{ fontStyle: \"italic\", color: \"#6495ED\"}}>useState</span> is a function that defines a variable and its corresponding set function. The variable\r\n                                holds the current state of a component field (i.e: the textbox, checkbox, page title value etc..) and the set function defines how to change the variable state\r\n                                at any point in the program execution or on a user invoked event.\r\n                        </li>\r\n                        </ul>\r\n                        <ul>\r\n                            <li className=\"BiggerText\" style={{ marginLeft: \"115px\" }}>\r\n                                useState is used by react in conjunction with reacts Reconciliation. Since we maintain state in memory we can track what UI elements have changed and which have \r\n                                remained untouched \r\n                            </li>\r\n                        </ul>\r\n                        <div style={{ marginLeft: \"115px\" }}>\r\n                        <CopyBlock\r\n                            \r\n                            language=\"jsx\"\r\n                                text={\"//Creating Page State Variable\\r\\nconst[variable, setVariable] = useState(initialState);\\r\\n\\r\\n//changing state of variable\\r\\nsetVariable(NewState);\"}\r\n                            theme={solarizedDark}\r\n                            showLineNumbers={false}\r\n                            codeBlock\r\n                            />\r\n                        </div>\r\n                        <ul className=\"sectionSpace\">\r\n                            <li className=\"BiggerText\" style={{ marginLeft: \"115px\" }}>\r\n                                <span style={{ fontStyle: \"italic\", color: \"#6495ED\" }}>useEffect</span>\r\n                            </li>\r\n                        </ul>\r\n                        <div style={{ marginLeft: \"115px\" }}>\r\n                            <CopyBlock\r\n\r\n                                language=\"jsx\"\r\n                                text={\"New Example Here\"}\r\n                                theme={solarizedDark}\r\n                                showLineNumbers={false}\r\n                                codeBlock\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n\r\n                <Row className=\"sectionSpace\">\r\n                    <Col className=\"titleCol\">\r\n                        <h3 className=\"Gold\">Reconciliation</h3>\r\n                    </Col>\r\n                    <hr className=\"Gold\" />\r\n                    <p className=\"BiggerText\">\r\n                        React maintains a {\"\\\"React DOM\\\"\"} (RD) which is essentially an in memory DOM. When there are changes to the Browser DOM (BD). React\r\n                        will take the RD and compare it to the BD and mark any changes that are in the VD but not in the BD. On save\r\n                        React will only take those flagged changes and persist them to the BD leaving any unchanged elements untouched and change elements that\r\n                        were flagged.\r\n                    </p>\r\n                </Row>\r\n\r\n\r\n                <Row className=\"sectionSpace\">\r\n                    <Col className=\"titleCol\">\r\n                        <h3 className=\"Gold\">Application Structure</h3>\r\n                    </Col>\r\n                    <hr className=\"Gold\" />\r\n                    <p className=\"BiggerText\">\r\n                        Maintains a clean and organized application structure that resembles that of our current design behavior with folder separated sections\r\n                        within a hierarchical structure.\r\n                    </p>\r\n                    <div className=\"CenterH\">\r\n                        <img src={require(\"../Images/Structure.jpg\")} alt=\"Folder Structure of Application\"></img>\r\n                    </div>\r\n                </Row>\r\n\r\n            </Container>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Body;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}